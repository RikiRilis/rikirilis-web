---
import Moon from "@/icons/Moon.astro";
import Sun from "@/icons/Sun.astro";
---

<button id="themeToggle" class="relative mr-3 flex h-fit w-fit items-center justify-center">
	<Moon
		id="dark"
		class="theme-toggle-icon absolutesize-6 text-slate-600 transition-all active:text-cyan-600 sm:hover:scale-125 sm:hover:text-cyan-600 dark:text-slate-400"
	/>

	<Sun
		id="light"
		class="theme-toggle-icon absolute size-6 text-slate-600 transition-all active:text-cyan-600 sm:hover:scale-125 sm:hover:text-cyan-600 dark:text-slate-400"
	/>
</button>

<script is:inline>
	document.addEventListener("astro:page-load", () => {
		let remove = null;
		const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");

		const updateIcon = (themePreference) => {
			document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
				element.style.scale = element.id === themePreference ? "1" : "0";
			});
		};

		const getThemePreference = () => {
			if (typeof localStorage !== "undefined") {
				return localStorage.getItem("theme") ?? "dark";
			}

			return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
		};

		const updateTheme = () => {
			if (remove != null) {
				remove();
			}

			matchMedia.addEventListener("change", updateTheme);

			remove = () => {
				matchMedia.removeEventListener("change", updateTheme);
			};

			const themePreference = getThemePreference();
			const isDark = themePreference === "dark" || (themePreference === "" && matchMedia.matches);

			updateIcon(themePreference);
			document.documentElement.classList.toggle("dark", isDark);
		};

		updateTheme();

		document.getElementById("themeToggle").addEventListener("click", (e) => {
			e.stopPropagation();
			const element = document.documentElement;
			element.classList.toggle("dark");

			const isDark = element.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
			updateTheme();
		});
	});
</script>
